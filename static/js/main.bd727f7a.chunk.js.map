{"version":3,"sources":["components/Header/index.tsx","components/Home/index.tsx","components/Footer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledHeader","styled","Layout","Header","Container","div","theme","mode","defaultSelectedKeys","Item","StyledContent","Content","Home","className","StyledFooter","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAIMA,EAAeC,YAAOC,IAAOC,OAAdF,CAAH,iFAMZG,EAAYH,IAAOI,IAAV,+FAmBAF,EAdA,WACb,OACE,cAACH,EAAD,UACE,cAACI,EAAD,UACE,eAAC,IAAD,CAAME,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,UACE,cAAC,IAAKC,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,a,QClBnBC,EAAgBT,YAAOU,UAAPV,CAAH,6GAcJW,EARF,WACX,OACE,cAACF,EAAD,UACE,qBAAKG,UAAU,sBAAf,wBCTAC,EAAeb,YAAOC,IAAOa,OAAdd,CAAH,4CAOHE,EAJA,WACb,OAAO,cAACW,EAAD,sDCDHV,EAAYH,IAAOI,IAAV,8CAaAW,MAVf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACD,EAAD,QCDSE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bd727f7a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport styled from \"styled-components\";\n\nconst StyledHeader = styled(Layout.Header)`\n  position: \"fixed\";\n  z-index: 1;\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  max-width: 1440px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <Container>\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\n        </Menu>\n      </Container>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import { Content } from \"antd/lib/layout/layout\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContent = styled(Content)`\n  margin-left: 2em;\n  height: 100%;\n  max-width: 1440px;\n  margin: 5em auto;\n`;\nconst Home = () => {\n  return (\n    <StyledContent>\n      <div className=\"site-layout-content\">Content</div>\n    </StyledContent>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport styled from \"styled-components\";\n\nconst StyledFooter = styled(Layout.Footer)`\n  width: 100%;\n`;\nconst Header = () => {\n  return <StyledFooter>Ant Design Â©2018 Created by Ant UED</StyledFooter>;\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\n\nconst Container = styled.div`\n  height: 100vh;\n`;\nfunction App() {\n  return (\n    <Container>\n      <Header />\n      <Home />\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}