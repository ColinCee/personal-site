{"version":3,"sources":["components/styling/Color.ts","components/styling/layout/HorizontalMargin.tsx","components/Header/index.tsx","components/Home/Statistic/CurrentTime.tsx","components/Home/Statistic/PageCount.tsx","components/Home/Statistic/index.tsx","components/Home/Interactions.tsx","components/Home/Banner.tsx","components/styling/layout/FlexContainer.tsx","components/Home/Timeline/TimelineBar.tsx","components/Home/Timeline/Item/DesktopItem.tsx","components/Home/Timeline/Item/MobileItem.tsx","components/Home/Timeline/index.tsx","hooks/useWindowSize.ts","components/styling/typography/Blockquote.ts","components/Home/About/BackgroundText.tsx","images/linkedin_pic.jpg","components/Home/About/Intro.tsx","components/Home/About/Skillset/Logo.tsx","components/Home/About/Skillset/Layout.tsx","components/Home/About/Skillset/Backend.tsx","images/github_actions.png","components/Home/About/Skillset/Devops.tsx","components/Home/About/Skillset/Frontend.tsx","components/Home/About/Skillset/index.tsx","components/Home/About/index.tsx","components/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Color","HorizontalMargin","styled","div","StyledHeader","Layout","Header","MenuItem","Menu","Item","theme","mode","icon","HomeOutlined","style","fontSize","FormOutlined","useState","dayjs","currentTime","setCurrentTime","useEffect","id","setInterval","clearInterval","format","StyledLoading","LoadingOutlined","visits","setVisits","a","unix","message","secret","key","hashDigest","sha256","hash","Base64","stringify","axios","get","apiUrl","params","time","headers","Authorization","token","data","count","console","error","fetchVisitCount","Hide","keyframes","Show","Container","Text","Animated","span","show","toggle","setToggle","intervalId","CurrentTime","PageCount","StyledButton","Button","href","GithubOutlined","size","LinkedinOutlined","Statistic","Background","NEUTRAL_400","TitleText","SubtitleText","Banner","Interactions","FlexContainer","FlexRowCenter","FlexCol","FlexColCenter","Timeline","IconContainer","className","faCircle","transform","color","PRIMARY_100","faBriefcase","ACCENT_900","Label","Title","Description","StyledCompany","StyledTitle","ACCENT_400","label","company","title","description","level","TimelineBar","items","TimelineItem","width","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","MobileItem","DesktopItem","map","blockquote","Blockquote","CirclarImage","img","DegreeText","src","ProfilePic","alt","props","tooltipText","Icon","isImageProp","altText","Logo","Java","Python","NodeJS","Redis","MongoDB","Postgres","Docker","GithubActions","AWS","Git","Kubernetes","Linux","ReactLogo","Redux","Electron","Webpack","Javascript","Typescript","Backend","Frontend","Devops","Intro","Skillset","BackgroundText","Home","About","App","ReactGA","initialize","ga","pageview","location","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d2042a1.chunk.js","sourcesContent":["enum Color {\n  PRIMARY_100 = \"#001529\",\n  NEUTRAL_100 = \"#141414\",\n  NEUTRAL_400 = \"#f6f6f6\",\n  NEUTRAL_900 = \"#d9d9d9\",\n\n  ACCENT_400 = \"#486BB3\",\n  ACCENT_900 = \"#b7e3fa\",\n}\n\nexport default Color;\n","import styled from \"styled-components\";\n\nconst HorizontalMargin = styled.div`\n  max-width: 1440px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default HorizontalMargin;\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport styled from \"styled-components\";\nimport { FormOutlined, HomeOutlined } from \"@ant-design/icons\";\nimport HorizontalMargin from \"../styling/layout/HorizontalMargin\";\n\nconst StyledHeader = styled(Layout.Header)`\n  position: \"fixed\";\n  z-index: 1;\n  width: 100%;\n  color: #b7e3fa;\n`;\n\nconst MenuItem = styled(Menu.Item)`\n  && {\n    color: #b7e3fa;\n    font-size: 16px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <HorizontalMargin>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <MenuItem\n            key=\"1\"\n            icon={<HomeOutlined style={{ fontSize: \"16px\" }} />}\n          >\n            Home\n          </MenuItem>\n          <MenuItem\n            key=\"2\"\n            icon={<FormOutlined style={{ fontSize: \"16px\" }} />}\n          >\n            Blog\n          </MenuItem>\n        </Menu>\n      </HorizontalMargin>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport Text from \"antd/lib/typography/Text\";\n\nexport default () => {\n  const [currentTime, setCurrentTime] = useState(dayjs());\n  useEffect(() => {\n    const id = setInterval(() => {\n      setCurrentTime(dayjs());\n    }, 500);\n    return () => clearInterval(id);\n  }, []);\n\n  return <Text>{currentTime.format(\"HH:mm:ss\")}</Text>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport sha256 from \"crypto-js/sha256\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport axios from \"axios\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport secret from \"../../../secret.json\";\n\nconst StyledLoading = styled(LoadingOutlined)`\n  margin-left: 0.5em;\n`;\nexport default () => {\n  const [visits, setVisits] = useState(-1);\n  useEffect(() => {\n    const fetchVisitCount = async () => {\n      try {\n        const currentTime = dayjs().unix();\n        const message = secret.key + currentTime;\n        const hashDigest = sha256(message);\n        const hash = Base64.stringify(hashDigest);\n\n        const { data } = await axios.get(secret.apiUrl, {\n          params: {\n            time: currentTime,\n            hash,\n          },\n          headers: {\n            Authorization: secret.token,\n          },\n        });\n        setVisits(data.count);\n      } catch (error) {\n        /* eslint-disable no-console */\n        console.error(\n          \"Whoops, looks like the visitor tracking server is down :(\"\n        );\n      }\n    };\n    fetchVisitCount();\n  }, []);\n\n  return <div>Page Visits: {visits === -1 ? <StyledLoading /> : visits}</div>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Text from \"antd/lib/typography/Text\";\nimport CurrentTime from \"./CurrentTime\";\nimport PageCount from \"./PageCount\";\n\nconst Hide = keyframes`\n  from {opacity: 1;}\n  to {opacity: 0;} \n`;\n\nconst Show = keyframes`\n  from {opacity: 0; transform: translateX(8rem)}\n  to {opacity: 1; transform: translateX(0px)} \n`;\n\nconst Container = styled(Text)`\n  font-size: 24px;\n`;\nconst Animated = styled.span<{ show: boolean }>`\n  display: ${({ show }) => (show ? \"block\" : \"none\")};\n  animation: ${({ show }) => (show ? Show : Hide)} 400ms ease-in;\n`;\nexport default () => {\n  const [toggle, setToggle] = useState(false);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setToggle(!toggle);\n    }, 10000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [toggle]);\n\n  return (\n    <Container>\n      <Animated show={toggle}>\n        <CurrentTime />\n      </Animated>\n      <Animated show={!toggle}>\n        <PageCount />\n      </Animated>\n    </Container>\n  );\n};\n","import { GithubOutlined, LinkedinOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Statistic from \"./Statistic\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  margin-top: 5rem;\n  margin-bottom: 1rem;\n`;\n\nconst StyledButton = styled(Button)`\n  && {\n    width: 2.75rem;\n    height: 2.75rem;\n    border: none;\n    background: none;\n    box-shadow: none;\n  }\n`;\nexport default () => {\n  return (\n    <>\n      <Container>\n        <StyledButton\n          href=\"https://github.com/ColinCee/\"\n          icon={<GithubOutlined style={{ fontSize: \"2rem\" }} />}\n          size=\"large\"\n        />\n        <StyledButton\n          href=\"https://www.linkedin.com/in/colin-cheung/\"\n          icon={<LinkedinOutlined style={{ fontSize: \"2rem\" }} />}\n          size=\"large\"\n        />\n      </Container>\n      <Statistic />\n    </>\n  );\n};\n","import Text from \"antd/lib/typography/Text\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Color from \"../styling/Color\";\nimport HorizontalMargin from \"../styling/layout/HorizontalMargin\";\nimport Interactions from \"./Interactions\";\n\nconst Background = styled.div`\n  background-color: ${Color.NEUTRAL_400};\n  height: 35rem;\n  @media (min-width: 450px) {\n    height: 27rem;\n  }\n`;\n\nconst Container = styled(HorizontalMargin)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n`;\n\nconst TitleText = styled(Text)`\n  font-size: 68px;\n`;\n\nconst SubtitleText = styled(Text)`\n  font-size: 16px;\n  margin-top: 1em;\n`;\n\nconst Banner = () => {\n  return (\n    <Background>\n      <Container>\n        <TitleText>Colin Cheung</TitleText>\n        <SubtitleText>\n          Software Engineer, Machine Learning Enthusiast, Backseat Gamer\n        </SubtitleText>\n        <Interactions />\n      </Container>\n    </Background>\n  );\n};\n\nexport default Banner;\n","import styled from \"styled-components\";\n\nconst FlexContainer = styled.div`\n  display: flex;\n`;\n\nexport const FlexRowCenter = styled(FlexContainer)`\n  justify-content: center;\n`;\n\nexport const FlexCol = styled(FlexContainer)`\n  flex-direction: column;\n`;\nexport const FlexColCenter = styled(FlexCol)`\n  align-items: center;\n`;\n\nexport default FlexContainer;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBriefcase, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport Color from \"../../styling/Color\";\n\nconst Timeline = styled.div`\n  position: relative;\n  width: 1px;\n  background-color: rgba(20, 20, 20, 0.1);\n  margin-inline: 1rem;\n`;\n\nconst IconContainer = styled.span`\n  position: absolute;\n  z-index: 1;\n  left: -0.6em;\n  top: 2.5rem;\n`;\n\nexport default () => {\n  return (\n    <Timeline>\n      <IconContainer className=\"fa-layers fa-fw\">\n        <FontAwesomeIcon\n          icon={faCircle}\n          transform=\"grow-24\"\n          style={{ color: Color.PRIMARY_100 }}\n        />\n        <FontAwesomeIcon\n          icon={faBriefcase}\n          style={{ color: Color.ACCENT_900 }}\n          transform=\"grow-4\"\n        />\n      </IconContainer>\n    </Timeline>\n  );\n};\n","import React from \"react\";\nimport Text from \"antd/lib/typography/Text\";\nimport styled from \"styled-components\";\n\nimport Title from \"antd/lib/typography/Title\";\nimport FlexContainer, { FlexCol } from \"../../../styling/layout/FlexContainer\";\nimport TimelineBar from \"../TimelineBar\";\nimport Color from \"../../../styling/Color\";\n\ntype Props = {\n  label: string;\n  company: string;\n  title: string;\n  description: string;\n};\n\nconst Container = styled.div`\n  max-width: 60rem;\n  display: grid;\n  grid-template-columns: minmax(8rem, 16rem) auto minmax(20rem, 1fr);\n`;\n\nconst Label = styled(Title)`\n  margin-block: 2.1rem;\n  margin-right: 2rem;\n  text-align: right;\n  && {\n    font-weight: 300;\n  }\n`;\n\nconst Description = styled(FlexCol)`\n  margin-block: 2rem;\n  margin-left: 2rem;\n`;\n\nconst StyledCompany = styled(Title)`\n  && {\n    font-weight: 300;\n  }\n`;\nconst StyledTitle = styled.span`\n  &&& {\n    color: ${Color.ACCENT_400};\n    margin-top: 0;\n    margin-left: 0.5rem;\n    font-weight: 300;\n  }\n`;\n\nexport default ({ label, company, title, description }: Props) => {\n  return (\n    <Container>\n      <Label level={3}>{label}</Label>\n      <TimelineBar />\n      <Description>\n        <FlexContainer>\n          <StyledCompany level={3}>\n            {company} /<StyledTitle>{title}</StyledTitle>\n          </StyledCompany>\n        </FlexContainer>\n        <Text>{description}</Text>\n      </Description>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport Text from \"antd/lib/typography/Text\";\nimport styled from \"styled-components\";\n\nimport Title from \"antd/lib/typography/Title\";\nimport FlexContainer, { FlexCol } from \"../../../styling/layout/FlexContainer\";\nimport TimelineBar from \"../TimelineBar\";\nimport Color from \"../../../styling/Color\";\n\ntype Props = {\n  label: string;\n  company: string;\n  title: string;\n  description: string;\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  gap: 1rem;\n`;\n\nconst Label = styled(Title)`\n  && {\n    font-weight: 300;\n  }\n`;\n\nconst Description = styled(FlexCol)`\n  margin-left: 0.5rem;\n  margin-block: 2rem;\n`;\n\nconst StyledCompany = styled(Title)`\n  && {\n    font-weight: 300;\n  }\n`;\nconst StyledTitle = styled.span`\n  &&& {\n    color: ${Color.ACCENT_400};\n    margin-top: 0;\n    margin-left: 0.5rem;\n    font-weight: 300;\n  }\n`;\n\nexport default ({ label, company, title, description }: Props) => {\n  return (\n    <Container>\n      <TimelineBar />\n      <Description>\n        <StyledCompany level={3}>\n          {company} /<StyledTitle>{title}</StyledTitle>\n        </StyledCompany>\n        <FlexContainer>\n          <Label level={4}>{label}</Label>\n        </FlexContainer>\n        <Text>{description}</Text>\n      </Description>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"antd/lib/typography/Title\";\n\nimport Color from \"../../styling/Color\";\nimport { FlexColCenter } from \"../../styling/layout/FlexContainer\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport DesktopItem from \"./Item/DesktopItem\";\nimport MobileItem from \"./Item/MobileItem\";\n\nconst Container = styled.div`\n  padding: 2rem;\n  background-color: ${Color.NEUTRAL_400};\n`;\n\nconst StyledTitle = styled(Title)`\n  text-align: center;\n  && {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst items = [\n  {\n    label: \"Feb 2020 - Apr 2021\",\n    company: \"Skyscanner\",\n    title: \"Software Engineer\",\n    description: `Full stack development of tools geared towards assisting the HR function.\n    The tech was super developer productive, they had a tool that created templated microservices.\n    This saved tons of time whilst maintaining company wide code standards. Skyscanner also has a\n    great data pipeline from logging all the through to analysis.`,\n  },\n  {\n    label: \"Jul 2017 - Jan 2020\",\n    company: \"PODFather\",\n    title: \"Software Engineer\",\n    description: `Full stack development primarily based around the core mobile application.\n    A cool product enabling logistics workers to sign off deliveries. Their electronic proof of\n    delivery helped saved thousands of trees worth of paper.`,\n  },\n  {\n    label: \"Sep 2013 - Jul 2018\",\n    company: \"University of Strathclyde\",\n    title: \"Computer and Electronic Systems\",\n    description: `Undergraduate joint-degree between Electrical Engineering and Computer Science.\n    I focused on Computer Science in my final year and worked on a Machine Learning dissertation.`,\n  },\n];\nexport default () => {\n  const { width } = useWindowSize();\n  const TimelineItem = width < 650 ? MobileItem : DesktopItem;\n  return (\n    <Container>\n      <StyledTitle>A Brief History</StyledTitle>\n      <FlexColCenter>\n        {items.map(({ label, company, title, description }) => (\n          <TimelineItem\n            key={title + company}\n            company={company}\n            label={label}\n            title={title}\n            description={description}\n          />\n        ))}\n      </FlexColCenter>\n    </Container>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport default () => {\n  // Initialize state with undefined width/height so server and client renders match\n\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n\n    function handleResize() {\n      // Set window width/height to state\n\n      setWindowSize({\n        width: window.innerWidth,\n\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n\n    handleResize();\n\n    // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n};\n","import styled from \"styled-components\";\nimport Color from \"../Color\";\n\nexport default styled.blockquote`\n  font-size: 1.4em;\n  margin-block: 4rem;\n  font-family: Open Sans;\n  font-style: italic;\n  color: #555555;\n  padding: 1rem 1rem 1rem 5rem;\n  border-left: 8px solid ${Color.ACCENT_900};\n  line-height: 1.6;\n  position: relative;\n\n  span {\n    display: block;\n    color: #333333;\n    font-style: normal;\n    font-weight: bold;\n    margin-top: 1em;\n  }\n\n  &&:before {\n    font-family: Arial;\n    content: \"“\";\n    color: ${Color.ACCENT_900};\n    font-size: 4em;\n    position: absolute;\n    left: 10px;\n    top: -10px;\n  }\n\n  &&:after {\n    content: \"\";\n  }\n`;\n","import React from \"react\";\nimport Text from \"antd/lib/typography/Text\";\nimport styled from \"styled-components\";\nimport { FlexColCenter } from \"../../styling/layout/FlexContainer\";\nimport Blockquote from \"../../styling/typography/Blockquote\";\n\nconst Container = styled(FlexColCenter)`\n  max-width: 40rem;\n  margin-inline: auto;\n  margin-top: 5rem;\n`;\n\nexport default () => {\n  return (\n    <Container>\n      <Text>\n        I love building things. I love using technologies that help save time\n        and solve interesting problems. Many of my personal projects have been\n        for fun or to learn a new technology, including this website! However we\n        always need to balance personal interests and optimal business\n        solutions.\n        <br />\n        <br /> My commercial years of experience has taught me many things, the\n        one that stands out is: not every buisness requirement needs a complex\n        solution or new framework.\n      </Text>\n      <Blockquote>\n        Keep It Simple Stupid\n        <span>- Some guy</span>\n      </Blockquote>\n    </Container>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/linkedin_pic.1b3bf794.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"antd/lib/typography/Title\";\nimport Text from \"antd/lib/typography/Text\";\nimport { FlexCol, FlexRowCenter } from \"../../styling/layout/FlexContainer\";\nimport ProfilePic from \"../../../images/linkedin_pic.jpg\";\n\nconst Container = styled(FlexRowCenter)`\n  margin-top: 2rem;\n`;\nconst CirclarImage = styled.img`\n  border-radius: 50%;\n  width: 5.25rem;\n  height: 5.25rem;\n  margin-right: 2rem;\n`;\nconst DegreeText = styled(Text)`\n  & {\n    font-weight: 300;\n  }\n`;\nexport default () => {\n  return (\n    <Container>\n      <CirclarImage\n        src={ProfilePic}\n        alt=\"Man wearing backpack with blue sky and clouds in background\"\n      />\n      <FlexCol>\n        <Title level={3}>About Me</Title>\n        <Text>Software Engineer at Skyscanner</Text>\n        <DegreeText>\n          BEng Computer and Electronic Systems @ University of Strathclyde\n        </DegreeText>\n      </FlexCol>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Tooltip } from \"antd\";\n\ntype SVGProps = {\n  Icon: React.ComponentType<React.SVGProps<SVGSVGElement>>;\n  tooltipText: string;\n};\n\ntype ImageProps = {\n  Icon: string;\n  altText: string;\n  tooltipText: string;\n};\n\ntype Props = SVGProps | ImageProps;\n\nconst isImageProp = (props: Props): props is ImageProps => {\n  return typeof props.Icon === \"string\";\n};\n\nexport default (props: SVGProps | ImageProps) => {\n  const { tooltipText, Icon } = props;\n  if (isImageProp(props)) {\n    return (\n      <Tooltip title={props.tooltipText}>\n        <img src={props.Icon} alt={props.altText} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip title={tooltipText}>\n      <Icon />\n    </Tooltip>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1 1;\n  margin: 1rem;\n`;\n\nexport const IconContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 3em);\n  gap: 1.5em;\n  margin-top: 1em;\n  svg,\n  img {\n    width: 3rem;\n    height: 3rem;\n  }\n`;\n","import React from \"react\";\nimport { ReactComponent as Java } from \"devicon/icons/java/java-original.svg\";\nimport { ReactComponent as Python } from \"devicon/icons/python/python-original.svg\";\nimport { ReactComponent as NodeJS } from \"devicon/icons/nodejs/nodejs-original.svg\";\nimport { ReactComponent as Redis } from \"devicon/icons/redis/redis-original.svg\";\nimport { ReactComponent as MongoDB } from \"devicon/icons/mongodb/mongodb-original.svg\";\nimport { ReactComponent as Postgres } from \"devicon/icons/postgresql/postgresql-original.svg\";\nimport Title from \"antd/lib/typography/Title\";\nimport Logo from \"./Logo\";\nimport { Container, IconContainer } from \"./Layout\";\n\nexport default () => {\n  return (\n    <Container>\n      <Title level={3}>Backend</Title>\n      <IconContainer>\n        <Logo Icon={Java} tooltipText=\"Java\" />\n        <Logo Icon={Python} tooltipText=\"Python\" />\n        <Logo Icon={NodeJS} tooltipText=\"NodeJS\" />\n        <Logo Icon={Redis} tooltipText=\"Redis\" />\n        <Logo Icon={MongoDB} tooltipText=\"MongoDB\" />\n        <Logo Icon={Postgres} tooltipText=\"Postgres\" />\n      </IconContainer>\n    </Container>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/github_actions.64e2a829.png\";","import React from \"react\";\nimport { ReactComponent as Docker } from \"devicon/icons/docker/docker-original.svg\";\nimport { ReactComponent as AWS } from \"devicon/icons/amazonwebservices/amazonwebservices-original.svg\";\nimport { ReactComponent as Git } from \"devicon/icons/git/git-original.svg\";\nimport { ReactComponent as Kubernetes } from \"devicon/icons/kubernetes/kubernetes-plain.svg\";\nimport { ReactComponent as Linux } from \"devicon/icons/linux/linux-original.svg\";\nimport Title from \"antd/lib/typography/Title\";\nimport GithubActions from \"../../../../images/github_actions.png\";\nimport Logo from \"./Logo\";\nimport { Container, IconContainer } from \"./Layout\";\n\nexport default () => {\n  return (\n    <Container>\n      <Title level={3}>Devops</Title>\n      <IconContainer>\n        <Logo Icon={Docker} tooltipText=\"Docker\" />\n        <Logo\n          Icon={GithubActions}\n          altText=\"Github Actions Logo\"\n          tooltipText=\"Github Actions\"\n        />\n        <Logo\n          Icon={AWS}\n          tooltipText=\"AWS (Lambda, API Gateway, SQS, SNS, S3, ECR, Elasticache)\"\n        />\n        <Logo Icon={Git} tooltipText=\"Git\" />\n        <Logo Icon={Kubernetes} tooltipText=\"Kubernetes\" />\n        <Logo Icon={Linux} tooltipText=\"Linux\" />\n      </IconContainer>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { ReactComponent as ReactLogo } from \"devicon/icons/react/react-original.svg\";\nimport { ReactComponent as Redux } from \"devicon/icons/redux/redux-original.svg\";\nimport { ReactComponent as Electron } from \"devicon/icons/electron/electron-original.svg\";\nimport { ReactComponent as Webpack } from \"devicon/icons/webpack/webpack-original.svg\";\nimport { ReactComponent as Javascript } from \"devicon/icons/javascript/javascript-original.svg\";\nimport { ReactComponent as Typescript } from \"devicon/icons/typescript/typescript-original.svg\";\nimport Title from \"antd/lib/typography/Title\";\nimport Logo from \"./Logo\";\nimport { Container, IconContainer } from \"./Layout\";\n\nexport default () => {\n  return (\n    <Container>\n      <Title level={3}>Frontend</Title>\n      <IconContainer>\n        <Logo Icon={ReactLogo} tooltipText=\"React\" />\n        <Logo Icon={Redux} tooltipText=\"Redux\" />\n        <Logo Icon={Electron} tooltipText=\"Electron\" />\n        <Logo Icon={Webpack} tooltipText=\"Webpack\" />\n        <Logo Icon={Javascript} tooltipText=\"Javascript\" />\n        <Logo Icon={Typescript} tooltipText=\"Typescript\" />\n      </IconContainer>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport HorizontalMargin from \"../../../styling/layout/HorizontalMargin\";\nimport Backend from \"./Backend\";\nimport Devops from \"./Devops\";\nimport Frontend from \"./Frontend\";\n\nconst Container = styled(HorizontalMargin)`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 50rem;\n  margin-top: 4em;\n  h3 {\n    font-weight: 300;\n  }\n`;\nexport default () => {\n  return (\n    <Container>\n      <Backend />\n      <Frontend />\n      <Devops />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Color from \"../../styling/Color\";\nimport BackgroundText from \"./BackgroundText\";\nimport Intro from \"./Intro\";\nimport Skillset from \"./Skillset\";\n\nconst Container = styled.div`\n  padding: 2rem;\n  background-color: ${Color.PRIMARY_100};\n  && * {\n    color: #d9d9d9;\n  }\n`;\nexport default () => {\n  return (\n    <Container>\n      <Intro />\n      <Skillset />\n      <BackgroundText />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport Banner from \"./Banner\";\nimport Timeline from \"./Timeline\";\nimport About from \"./About\";\n\nconst Home = () => {\n  return (\n    <>\n      <Banner />\n      <About />\n      <Timeline />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport ReactGA from \"react-ga\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\n\nconst Container = styled.div`\n  height: 100vh;\n`;\nfunction App() {\n  useEffect(() => {\n    ReactGA.initialize(\"G-F246GL9SJW\");\n    ReactGA.ga(\"set\", \"checkProtocolTask\", null);\n    ReactGA.pageview(window.location.pathname);\n  }, []);\n  return (\n    <Container>\n      <Header />\n      <Home />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}